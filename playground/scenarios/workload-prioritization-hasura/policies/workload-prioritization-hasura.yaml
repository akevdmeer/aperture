# yaml-language-server: $schema=../../../../blueprints/policies/service-protection/promql/gen/definitions.json
policy:
  policy_name: workload-prioritization-hasura
  promql_query: 'pg_db_queries_per_second{db="hasura"}'
  setpoint: 3500
  evaluation_interval: "1s"
  resources:
    flow_control:
      classifiers:
        - selectors:
            - service: hasura.cloud.svc.cluster.local
              control_point: ingress
          rego:
            labels:
              source:
                telemetry: true
              operation:
                telemetry: true
            module: |
              package hasura_example
              source = input.attributes.source.source_fqdns[0]
              operation = graphql.parse_query(input.parsed_body.query).Operations[_].Operation
    telemetry_collectors:
      - agent_group: default
        infra_meters:
          prometheus_simple:
            per_agent_group: true
            receivers:
              prometheus_simple:
                collection_interval: 1s
                use_service_account: true
                endpoint: "hasura-postgresql-metrics.cloud.svc.cluster.local:9187"
                tls:
                  insecure_skip_verify: true
  service_protection_core:
    adaptive_load_scheduler:
      load_scheduler:
        selectors:
          - control_point: ingress
            service: hasura.cloud.svc.cluster.local
        scheduler:
          workloads:
            - label_matcher:
                match_labels:
                  source: "api-service.cloud.svc.cluster.local"
              parameters:
                priority: 200
              name: "api-service"
            - label_matcher:
                match_labels:
                  source: "agent-service.cloud.svc.cluster.local"
              parameters:
                priority: 50
              name: "agent-service"
