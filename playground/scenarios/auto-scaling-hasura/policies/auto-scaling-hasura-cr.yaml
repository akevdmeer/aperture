apiVersion: fluxninja.com/v1alpha1
kind: Policy
metadata:
  annotations:
    fluxninja.com/blueprint-name: policies/service-protection-with-load-based-pod-auto-scaler/average-latency
    fluxninja.com/blueprints-uri: local
    fluxninja.com/values: '{"policy": {"auto_scaling": {"kubernetes_replicas": {"kubernetes_object_selector":
      {"agent_group": "default", "api_version": "apps/v1", "kind": "Deployment", "name":
      "hasura", "namespace": "cloud"}, "max_replicas": "10", "min_replicas": "1"},
      "scaling_parameters": {"scale_in_cooldown": "120s", "scale_out_cooldown": "30s"}},
      "latency_baseliner": {"flux_meter": {"selectors": [{"control_point": "ingress",
      "label_matcher": {"match_labels": {"operation": "query", "source": "api-service.cloud.svc.cluster.local"}},
      "service": "hasura.cloud.svc.cluster.local"}]}}, "policy_name": "auto-scaling-hasura",
      "resources": {"flow_control": {"classifiers": [{"rego": {"labels": {"operation":
      {"telemetry": true}, "source": {"telemetry": true}}, "module": "package hasura_example\nsource
      = input.attributes.source.source_fqdns[0]\noperation = graphql.parse_query(input.parsed_body.query).Operations[_].Operation\n"},
      "selectors": [{"control_point": "ingress", "service": "hasura.cloud.svc.cluster.local"}]}]}},
      "service_protection_core": {"adaptive_load_scheduler": {"load_scheduler": {"scheduler":
      {"workloads": [{"label_matcher": {"match_labels": {"source": "api-service.cloud.svc.cluster.local"}},
      "name": "api-service", "parameters": {"priority": 200}}, {"label_matcher": {"match_labels":
      {"operation": "mutation", "source": "agent-service.cloud.svc.cluster.local"}},
      "name": "agent-service-mutation", "parameters": {"priority": 100}}, {"label_matcher":
      {"match_labels": {"operation": "query", "source": "agent-service.cloud.svc.cluster.local"}},
      "name": "agent-service-query", "parameters": {"priority": 50}}]}, "selectors":
      [{"control_point": "ingress", "service": "hasura.cloud.svc.cluster.local"}]}},
      "dry_run": true}}}'
  labels:
    fluxninja.com/validate: "true"
  name: auto-scaling-hasura
spec:
  circuit:
    components:
    - flow_control:
        adaptive_load_scheduler:
          dry_run: true
          dry_run_config_key: dry_run
          in_ports:
            overload_confirmation:
              constant_signal:
                value: 1
            setpoint:
              signal_name: SETPOINT
            signal:
              signal_name: SIGNAL
          out_ports:
            desired_load_multiplier:
              signal_name: DESIRED_LOAD_MULTIPLIER
            observed_load_multiplier:
              signal_name: OBSERVED_LOAD_MULTIPLIER
          parameters:
            alerter:
              alert_name: Load Throttling Event
            gradient:
              max_gradient: 1
              min_gradient: 0.1
              slope: -1
            load_multiplier_linear_increment: 0.0025
            load_scheduler:
              scheduler:
                workloads:
                - label_matcher:
                    match_labels:
                      source: api-service.cloud.svc.cluster.local
                  name: api-service
                  parameters:
                    priority: 200
                - label_matcher:
                    match_labels:
                      operation: mutation
                      source: agent-service.cloud.svc.cluster.local
                  name: agent-service-mutation
                  parameters:
                    priority: 100
                - label_matcher:
                    match_labels:
                      operation: query
                      source: agent-service.cloud.svc.cluster.local
                  name: agent-service-query
                  parameters:
                    priority: 50
              selectors:
              - control_point: ingress
                service: hasura.cloud.svc.cluster.local
            max_load_multiplier: 2
    - query:
        promql:
          evaluation_interval: 1s
          out_ports:
            output:
              signal_name: SIGNAL
          query_string: sum(increase(flux_meter_sum{flow_status="OK", flux_meter_name="auto-scaling-hasura"}[5s]))/sum(increase(flux_meter_count{flow_status="OK",
            flux_meter_name="auto-scaling-hasura"}[5s]))
    - arithmetic_combinator:
        in_ports:
          lhs:
            signal_name: SIGNAL
          rhs:
            constant_signal:
              value: 2
        operator: mul
        out_ports:
          output:
            signal_name: MAX_EMA
    - ema:
        in_ports:
          input:
            signal_name: SIGNAL
          max_envelope:
            signal_name: MAX_EMA
        out_ports:
          output:
            signal_name: SIGNAL_EMA
        parameters:
          correction_factor_on_max_envelope_violation: 0.95
          ema_window: 1500s
          warmup_window: 60s
    - arithmetic_combinator:
        in_ports:
          lhs:
            signal_name: SIGNAL_EMA
          rhs:
            constant_signal:
              value: 1.1
        operator: mul
        out_ports:
          output:
            signal_name: SETPOINT
    - auto_scale:
        auto_scaler:
          dry_run: false
          dry_run_config_key: dry_run
          scale_in_controllers:
          - alerter:
              alert_name: Gradient controller intends to scale in
            controller:
              periodic:
                period: 60s
                scale_in_percentage: 10
          scale_out_controllers:
          - alerter:
              alert_name: Gradient controller intends to scale out
            controller:
              gradient:
                in_ports:
                  setpoint:
                    constant_signal:
                      value: 1
                  signal:
                    signal_name: DESIRED_LOAD_MULTIPLIER
                parameters:
                  slope: -1
          scaling_backend:
            kubernetes_replicas:
              kubernetes_object_selector:
                agent_group: default
                api_version: apps/v1
                kind: Deployment
                name: hasura
                namespace: cloud
              max_replicas: "10"
              min_replicas: "1"
          scaling_parameters:
            scale_in_alerter:
              alert_name: Auto-scaler is scaling in
            scale_in_cooldown: 120s
            scale_out_alerter:
              alert_name: Auto-scaler is scaling out
            scale_out_cooldown: 30s
    evaluation_interval: 1s
  resources:
    flow_control:
      classifiers:
      - rego:
          labels:
            operation:
              telemetry: true
            source:
              telemetry: true
          module: |
            package hasura_example
            source = input.attributes.source.source_fqdns[0]
            operation = graphql.parse_query(input.parsed_body.query).Operations[_].Operation
        selectors:
        - control_point: ingress
          service: hasura.cloud.svc.cluster.local
      flux_meters:
        auto-scaling-hasura:
          selectors:
          - control_point: ingress
            label_matcher:
              match_labels:
                operation: query
                source: api-service.cloud.svc.cluster.local
            service: hasura.cloud.svc.cluster.local
