# Generated values file for policies/feature-rollout blueprint
# Documentation/Reference for objects and parameters can be found at:
# https://docs.fluxninja.com/reference/policies/bundled-blueprints/policies/feature-rollout

common:
  # Name of the policy.
  # Type: string
  # Required: True
  policy_name: __REQUIRED_FIELD__

# Parameters for the Feature Rollout policy.
# Type: rollout_policy
# Required: True
policy:
  components: []
  drivers:
    average_latency_drivers:
      [
        {
          "backward": { "threshold": "__REQUIRED_FIELD__" },
          "flow_selector":
            {
              "flow_matcher": { "control_point": "__REQUIRED_FIELD__" },
              "service_selector": { "service": "__REQUIRED_FIELD__" },
            },
          "forward": { "threshold": "__REQUIRED_FIELD__" },
          "reset": { "threshold": "__REQUIRED_FIELD__" },
        },
      ]
    ema_latency_drivers:
      [
        {
          "backward": { "latency_tolerance_multiplier": 1.05 },
          "ema": { "ema_window": "1500s", "warmup_window": "60s" },
          "flow_selector":
            {
              "flow_matcher": { "control_point": "__REQUIRED_FIELD__" },
              "service_selector": { "service": "__REQUIRED_FIELD__" },
            },
          "forward": { "latency_tolerance_multiplier": 1.05 },
          "reset": { "latency_tolerance_multiplier": 1.25 },
        },
      ]
    percentile_latency_drivers:
      [
        {
          "backward": { "threshold": "__REQUIRED_FIELD__" },
          "flux_meter":
            {
              "flow_selector":
                {
                  "flow_matcher": { "control_point": "__REQUIRED_FIELD__" },
                  "service_selector": { "service": "__REQUIRED_FIELD__" },
                },
              "static_buckets":
                {
                  "buckets":
                    [5, 10, 25, 50, 100, 250, 500, 1000, 2500, 5000, 10000],
                },
            },
          "forward": { "threshold": "__REQUIRED_FIELD__" },
          "percentile": "__REQUIRED_FIELD__",
          "reset": { "threshold": "__REQUIRED_FIELD__" },
        },
      ]
    promql_drivers:
      [
        {
          "backward":
            {
              "operator": "__REQUIRED_FIELD__",
              "threshold": "__REQUIRED_FIELD__",
            },
          "forward":
            {
              "operator": "__REQUIRED_FIELD__",
              "threshold": "__REQUIRED_FIELD__",
            },
          "query_string": "__REQUIRED_FIELD__",
          "reset":
            {
              "operator": "__REQUIRED_FIELD__",
              "threshold": "__REQUIRED_FIELD__",
            },
        },
      ]
  evaluation_interval: "1s"
  load_shaper:
    flow_regulator_parameters:
      flow_selector:
        flow_matcher:
          control_point: __REQUIRED_FIELD__
        service_selector:
          service: __REQUIRED_FIELD__
      label_key: ""
    steps:
      [
        {
          "duration": "__REQUIRED_FIELD__",
          "target_accept_percentage": "__REQUIRED_FIELD__",
        },
      ]
  resources:
    flow_control:
      classifiers: []
      flux_meters:

dashboard:
  # Refresh interval for dashboard panels.
  # Type: string
  refresh_interval: "5s"
  # From time of dashboard.
  # Type: string
  time_from: "now-15m"
  # To time of dashboard.
  # Type: string
  time_to: "now"
  datasource:
    # Datasource name.
    # Type: string
    name: "$datasource"
    # Datasource filter regex.
    # Type: string
    filter_regex: ""
